# 검증 세트
: 하이퍼파라미터 튜닝을 위해 모델을 평가할 때, 테스트 세트를 사용하지 않기 위해 훈련 세트에서 다시 떼어 낸 데이터 세트
- 테스트 세트를 사용하지 않고 이를 측정하는 간단한 방법은 훈련세트를 또 나누는 것
  → 나눠진 이 데이터를 검증세트라고 부름
- 훈련 세트에서 모델을 훈련하고 검증 세트로 모델을 평가

# 교차 검증
: 검증 세트를 뗴어 내어 평가하는 과정을 여러 번 반복 후 이 점수를 평균해 최종 검증 점수를 얻음
- 훈련 세트를 여러 폴드로 나눈 다음 한 폴드가 검증 세트의 역할을 하고 나머지 폴드에서는 모델을 훈련 함
  이런 식으로 모든 폴드에 대해 검증 점수를 얻어 평균하는 방법
  - 검증 세트가 줄어들지만, 각 폴드에서 계산한 검증 점수를 평균하기 때문에 안정된 점수로 생각 가능
- 보통 많은 데이터를 훈련에 사용할수록 좋은 모델이 만들어짐
  but 그렇다고 검증 세트를 너무 조금 떼어 놓으면 검증 점수가 들쭉날쭉하고 불안정할 것
  → 교차 검증을 이용해 안정적인 검증 점수를 얻고 훈련에 더 많은 데이터를 사용 가능
- k-폴드 교차 검증(k-겹 교차 검증) : 훈련 세트를 몇 부분으로 나누냐에 따라 다르게 부름 ex) 3개 -> 3-폴드 교차 검증
  - 보통 5, 10 폴드 교차 검증 많이 사용
- 교차 검증 수행시 입력한 모델에서 얻을 수 있는 최상의 검증 점수 가늠 가능
- cross_validate() :  사이킷런에서 제공하는 교차 검증 함수
  - 주의점) 훈련 세트를 섞어 폴드를 나누지 않음 → 교차 검증을 할 때 훈련 세트를 섞으려면 분할기를 지정해야 함
    - 사이킷런의 분할기는 교차 검즈에서 폴드를 어떠헤 나눌지 결정해 줌
      - 기본적으로 회귀 모델일 경우 KFold 분할기 사용
      - 분류 모델일 경우 타깃 클래스를 골고루 나누기 위해 StratifiedKFold 사용
      * n_splits 매개변수 : 몇(k) 폴드 교차 검증을 할지 정함
  - 사용방법 : 
    1. 평가할 모델 객체를 첫 번째 매개변수로 전달
    2. 직접 검증 세트를 떼어 내지 않고 훈련 세트 전체를 cross_validate() 함수에 전달
  - fit_time, score_time, test_score 키를 가진 딕셔너리 반환
    - fit_time, score_time : 각각 모델을 훈련하는 시간과 검증하는 시간 의미
    - 각 키마다 5개의 숫자 담겨 있음 --> cross_validate()함수는 기본적으로 5-폴드 교차 검증을 수행 
      (*cv 매개변수에서 폴드 수를 바꿀 수 있음)
      ==> 최종 점수는 test_score 키에 담긴 5개의 점수를 평균해 얻음, 이름은 test_score이지만 검증 폴드 점수이니 혼동하지 말것!!

# 하이퍼파라미터 튜닝
- 한 매개변수의 최적값을 찾고 다른 매개변수의 최적값을 찾으면 안 됨
  → 즉 매개변수를 동시에 바꿔가며 최적의 값을 찾아야함!
  → 매개변수 많아지면 문제 복잡해짐
  ==>  사이킷런에서 제공하는 그리드 서치 사용하면 편리~

# 그리드 서치
: 하이퍼파라미터 탐색을 자동화해 주는 도구 
- 탐색할 매개변수를 나열하면 교차 검증을 수행해 가장 좋은 검증 점수의 매개변수 조합을 선택 후 
  마지막으로 이 매개변수 조합으로 최종 모델 훈련
- GridSearchCV 클래스 
  - 사이킷런 제공 → sklearn.model_selection 아래에서 import
  - 하이퍼파라미터 탐색과 교차 검증을 한 번에 수행, 별도로 cross_validate()함수 호출이 필요 없음
  - 탐색 대상 모델과 params 변수를전달해 그리드 서치 객체 만듦 
  - cv 매개변수 기본 값은 5 = 5-폴드 교차 검증 수행
  - n_jobs : 병렬 실행에 사용할 CPU 코어 수 지정, 기본 값은1, -1로 지정시 시스템에 있는 모든 코어 사용
  - best_estimator_ 속성 : 검증 점수가 가장 높은 모델의 매개변수 조합으로 전체 훈련 세트에서 자동으로 모델 훈련하는데 이 모델이
                           만든 객체의 이 속성 안에 잇음
  - best_params_ 속성 : 그리드 서치로 찾은 최적의 매개변수 저장되어 있음
  - cv_results_ 속성의 mean_test_score 키 : 각 매개변수에서 수행한 교차 검증의 평균 점수 저장되어 잇음 
  * 넘파이 armax()함수를 사용해 가장 큰 값의 인덱스 추출 가능
  
# 랜덤 서치
- 연속된 매개변수 값을 탐색할 때 유용
- 탐색할 값을 직접 나열하는 것이 아니고 탐색 값을 샘플링할 수 있는 확률 분포 객체를 전달
- 지정된 횟수만큼 샘플링해 교차 검증을 수행 → 시스템 자원이 허락하는 만큼 탐색량 조절 가능
- 싸이파이(scipy) states 서브 패키지에 있는 uniform과 randint 클래스는 모두 주어진 범위에서 고르게 값 뽑음 → 균등 분포에서 샘플링 한다.
  - randint : 정숫값 뽑음
  - uniform : 실숫값 뽑음
  - 랜덤 서치에서 randint와 uniform 클래스 객체를 넘겨주고 총 몇 번을 샘플링해 최적의 매개변수를 찾으라고 명령 가능
    - 샘플링 횟수는 시스템 자원이 허락하는 범위 내에서 최대한 크게 하는 것이 좋음
- RandomizedSearchCV : 사이킷런의 랜덤 서치 클래스
  - 교차 검증으로 랜덤한 하이퍼파라미터 탐색 수행, 최상의 모델을 찾은 후 훈련 세트 전체를 사용해 최종 모델 훈련
  - n_iter 매개변수를 이용해 샘플링 횟수 지정
